version: "3"
services:
  #
  # API with hot-reloading
  #
  api-dev:
    image: issuer-api-dev:latest
    environment:
      - DEBUG=true
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=development
      - FLASK_RUN_PORT=${FLASK_RUN_PORT}
      - FLASK_RUN_HOST=${FLASK_RUN_HOST}
      - SECRET_KEY=${SECRET_KEY}
      - DB_DATABASE=${MONGODB_DATABASE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${MONGODB_PORT}
      - DB_USER=${MONGODB_USER}
      - DB_PASSWORD=${MONGODB_PASSWORD}
      - OIDC_ISSUER=${OIDC_ISSUER}
      - OIDC_CLIENT=${OIDC_CLIENT}
      - OIDC_SECRET=${OIDC_SECRET}
      - OIDC_REDIRECT_URI=${OIDC_REDIRECT_URI}
      - OIDC_POST_LOGOUT_REDIRECT_URI=${OIDC_POST_LOGOUT_REDIRECT_URI}
    volumes:
      - ../api:/app
    ports:
      - ${FLASK_RUN_PORT}:${FLASK_RUN_PORT}
    networks:
      - issuer_kit
  
  #
  # Issuer frontend
  #
  issuer-web:
    image: issuer-web:latest
    environment:
      - WEB_HOST_NAME=${PUBLIC_WEB_HOST_NAME}
      - WEB_HOST_PORT=${PUBLIC_WEB_HOST_PORT}
      - WEB_HOST_TLS=${PUBLIC_WEB_HOST_TLS}
      - API_HOST=${PUBLIC_API_HOST}
      - API_PORT=${PUBLIC_API_PORT}
    volumes:
      - ./issuer-web/config/Caddyfile:/etc/Caddyfile
      - ./issuer-web/config/claim-config.json:/srv/config/claim-config.json
      - ./issuer-web/config/config.json:/srv/config/config.json
      - ./issuer-web/config/vuetify.json:/srv/config/vuetify.json
      - ./issuer-web/config/terms-and-conditions.html:/srv/terms-and-conditions.html
    ports:
      - ${PUBLIC_WEB_HOST_PORT}:${PUBLIC_WEB_HOST_PORT}
    networks:
      - issuer_kit

  #
  # Issuer frontend with hot-reloading
  #
  issuer-web-dev:
    image: node:erbium
    volumes:
      - ../issuer-web:/usr/src/issuer-web
    working_dir: /usr/src/issuer-web
    ports:
      - ${ISSUER_WEB_PORT}:${ISSUER_WEB_PORT}
    networks:
      - issuer_kit
    command: npm run serve

  #
  # db
  #
  db:
    image: registry.access.redhat.com/rhscl/mongodb-36-rhel7
    environment:
      - MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
    volumes:
      - db-data:/var/lib/mongodb/data
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - issuer_kit

  #
  # keycloak service
  #
  keycloak:
    image: jboss/keycloak:9.0.0
    environment:
      DB_VENDOR: ${KEYCLOAK_DB_VENDOR}
      DB_ADDR: ${KEYCLOAK_DB_ADDR}
      DB_DATABASE: ${KEYCLOAK_DB_NAME}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_LOGLEVEL: ${KEYCLOAK_LOGLEVEL}
      ROOT_LOGLEVEL: ${KEYCLOAK_ROOT_LOGLEVEL}
      KEYCLOAK_IMPORT: ${KEYCLOAK_IMPORT}
    volumes:
      - ../docker/keycloak/config/realm-export-docker.json:/tmp/realm-export-docker.json
    networks:
      - issuer_kit
    ports:
      - 8180:8080
    depends_on:
      - keycloak-db

  #
  # keycloak-db
  #
  keycloak-db:
    image: registry.access.redhat.com/rhscl/postgresql-10-rhel7:latest
    environment:
      POSTGRESQL_USER: ${KEYCLOAK_DB_USER}
      POSTGRESQL_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      POSTGRESQL_DATABASE: ${KEYCLOAK_DB_NAME}
    volumes:
      - keycloak-db-data:/var/lib/pgsql/data
    networks:
      - issuer_kit

  #
  # Agent
  #
  agent:
    image: bcgovimages/aries-cloudagent:py36-1.14-1_0.4.5
    environment:
      - LEDGER_URL=${LEDGER_URL}
      - WALLET_TYPE=${WALLET_TYPE}
      - POSTGRESQL_WALLET_HOST=${POSTGRESQL_WALLET_HOST}
      - POSTGRESQL_WALLET_PORT=${POSTGRESQL_WALLET_PORT}
      - POSTGRESQL_WALLET_USER=${POSTGRESQL_USER}
      - POSTGRESQL_WALLET_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_WALLET_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
      - WALLET_ENCRYPTION_KEY=${WALLET_ENCRYPTION_KEY}
      - INDY_WALLET_SEED=${AGENT_WALLET_SEED}
      - WEBHOOK_URL=${AGENT_WEBHOOK_URL}
      - HTTP_INTERFACE_PORT=${HTTP_INTERFACE_PORT}
      - AGENT_ADMIN_PORT=${AGENT_ADMIN_PORT}
      - AGENT_NAME=${AGENT_NAME}
      - AGENT_ADMIN_API_KEY=${AGENT_ADMIN_API_KEY}
    networks:
      - issuer_kit
    ports:
      - ${AGENT_HTTP_INTERFACE_PORT}:${AGENT_HTTP_INTERFACE_PORT}
      - ${AGENT_ADMIN_PORT}:${AGENT_ADMIN_PORT}
    depends_on:
      - wallet
    entrypoint: /bin/bash
    command: [
        "-c",
        "curl -d '{\"seed\":\"${AGENT_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        sleep 5; \
        aca-py start \
        --inbound-transport http '0.0.0.0' ${AGENT_HTTP_INTERFACE_PORT} \
        --outbound-transport http \
        --endpoint ${AGENT_ENDPOINT} \
        --genesis-url '${LEDGER_URL}/genesis' \
        --auto-accept-invites \
        --auto-accept-requests \
        --auto-ping-connection \
        --auto-respond-messages \
        --auto-store-credential \
        --auto-verify-presentation \
        --auto-respond-presentation-proposal \
        --wallet-type 'indy' \
        --wallet-name '${AGENT_WALLET_NAME}' \
        --wallet-key '${AGENT_WALLET_ENCRYPTION_KEY}' \
        --wallet-storage-type '${AGENT_STORAGE_WALLET_TYPE}' \
        --wallet-storage-config '{\"url\":\"${WALLET_HOST}:${WALLET_PORT}\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${WALLET_USER}\",\"password\":\"${WALLET_PASSWORD}\",\"admin_account\":\"postgres\",\"admin_password\":\"${WALLET_ADMIN_PASSWORD}\"}' \
        --seed '${AGENT_WALLET_SEED}' \
        --admin '0.0.0.0' ${AGENT_ADMIN_PORT} \
        --${AGENT_ADMIN_MODE} \
        --label ${AGENT_NAME}",
      ]

  #
  # Identity Kit Wallet
  #
  wallet:
    image: registry.access.redhat.com/rhscl/postgresql-10-rhel7:latest
    environment:
      - POSTGRESQL_USER=${WALLET_USER}
      - POSTGRESQL_PASSWORD=${WALLET_PASSWORD}
      - POSTGRESQL_DATABASE=${WALLET_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${WALLET_ADMIN_PASSWORD}
    networks:
      - issuer_kit
    ports:
      - ${WALLET_PORT}:${WALLET_PORT}
    volumes:
      - wallet-data:/var/lib/pgsql/data

networks:
  issuer_kit:

volumes:
  keycloak-db-data:
  wallet-data:
  db-data:
